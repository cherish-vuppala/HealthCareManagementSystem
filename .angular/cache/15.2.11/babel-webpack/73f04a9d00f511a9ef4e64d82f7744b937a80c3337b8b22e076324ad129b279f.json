{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { Doctor } from '../models/doctor';\nimport { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst NAV_URL = environment.apiURL;\nexport class DoctorService {\n  constructor(_http) {\n    this._http = _http;\n    this.user = new User();\n    this.doctor = new Doctor();\n  }\n  addDoctorFromRemote(doctor) {\n    return this._http.post(`${NAV_URL}/addDoctor`, doctor);\n  }\n  getDoctorList() {\n    return this._http.get(`${NAV_URL}/doctorlist`);\n  }\n  getSlotList() {\n    return this._http.get(`${NAV_URL}/slotDetails`);\n  }\n  getSlotListWithUniqueDoctors() {\n    return this._http.get(`${NAV_URL}/slotDetailsWithUniqueDoctors`);\n  }\n  getSlotListWithUniqueSpecializations() {\n    return this._http.get(`${NAV_URL}/slotDetailsWithUniqueSpecializations`);\n  }\n  getSlotDetails(loggedUser) {\n    return this._http.get(`${NAV_URL}/slotDetails/` + loggedUser);\n  }\n  getDoctorListByEmail(loggedUser) {\n    return this._http.get(`${NAV_URL}/doctorlistbyemail/` + loggedUser);\n  }\n  getPatientListByEmail(email) {\n    return this._http.get(`${NAV_URL}/patientlistbyemail/` + email);\n  }\n  getPatientList() {\n    return this._http.get(`${NAV_URL}/patientlist`);\n  }\n  getPatientListByDoctorEmail(loggedUser) {\n    return this._http.get(`${NAV_URL}/patientlistbydoctoremail/` + loggedUser);\n  }\n  getPatientListByDoctorEmailAndDate(loggedUser) {\n    return this._http.get(`${NAV_URL}/patientlistbydoctoremailanddate/` + loggedUser);\n  }\n  acceptRequestForDoctorApproval(email) {\n    console.log('accepted');\n    return this._http.get(`${NAV_URL}/acceptstatus/` + email);\n  }\n  rejectRequestForDoctorApproval(email) {\n    return this._http.get(`${NAV_URL}/rejectstatus/` + email);\n  }\n  acceptRequestForPatientApproval(slot) {\n    console.log('accepted');\n    return this._http.get(`${NAV_URL}/acceptpatient/` + slot);\n  }\n  rejectRequestForPatientApproval(slot) {\n    return this._http.get(`${NAV_URL}/rejectpatient/` + slot);\n  }\n  addBookingSlots(slot) {\n    return this._http.post(`${NAV_URL}/addBookingSlots`, slot);\n  }\n  addPrescriptions(prescription) {\n    return this._http.post(`${NAV_URL}/addPrescription`, prescription);\n  }\n  getProfileDetails(loggedUser) {\n    return this._http.get(`${NAV_URL}/doctorProfileDetails/` + loggedUser);\n  }\n  UpdateDoctorProfile(user) {\n    return this._http.put(`${NAV_URL}/updatedoctor`, user);\n  }\n}\nDoctorService.ɵfac = function DoctorService_Factory(t) {\n  return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient));\n};\nDoctorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DoctorService,\n  factory: DoctorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["environment","Doctor","User","NAV_URL","apiURL","DoctorService","constructor","_http","addDoctorFromRemote","doctor","post","getDoctorList","get","getSlotList","getSlotListWithUniqueDoctors","getSlotListWithUniqueSpecializations","getSlotDetails","loggedUser","getDoctorListByEmail","getPatientListByEmail","email","getPatientList","getPatientListByDoctorEmail","getPatientListByDoctorEmailAndDate","acceptRequestForDoctorApproval","console","log","rejectRequestForDoctorApproval","acceptRequestForPatientApproval","slot","rejectRequestForPatientApproval","addBookingSlots","addPrescriptions","prescription","getProfileDetails","UpdateDoctorProfile","user","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cheri\\Downloads\\HealthCareManagement-main\\HealthCareManagement-main\\src\\app\\services\\doctor.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Doctor } from '../models/doctor';\nimport { Prescription } from '../models/prescription';\nimport { Slots } from '../models/slots';\nimport { User } from '../models/user';\n\nconst NAV_URL = environment.apiURL;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DoctorService {\n  user = new User();\n  doctor = new Doctor();\n\n  constructor(private _http: HttpClient) {}\n\n  addDoctorFromRemote(doctor: Doctor): Observable<any> {\n    return this._http.post<any>(`${NAV_URL}/addDoctor`, doctor);\n  }\n\n  getDoctorList(): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/doctorlist`);\n  }\n\n  getSlotList(): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/slotDetails`);\n  }\n\n  getSlotListWithUniqueDoctors(): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/slotDetailsWithUniqueDoctors`);\n  }\n\n  getSlotListWithUniqueSpecializations(): Observable<any> {\n    return this._http.get<any>(\n      `${NAV_URL}/slotDetailsWithUniqueSpecializations`\n    );\n  }\n\n  getSlotDetails(loggedUser: string): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/slotDetails/` + loggedUser);\n  }\n\n  getDoctorListByEmail(loggedUser: string): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/doctorlistbyemail/` + loggedUser);\n  }\n\n  getPatientListByEmail(email: string): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/patientlistbyemail/` + email);\n  }\n\n  getPatientList(): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/patientlist`);\n  }\n\n  getPatientListByDoctorEmail(loggedUser: string): Observable<any> {\n    return this._http.get<any>(\n      `${NAV_URL}/patientlistbydoctoremail/` + loggedUser\n    );\n  }\n\n  getPatientListByDoctorEmailAndDate(loggedUser: string): Observable<any> {\n    return this._http.get<any>(\n      `${NAV_URL}/patientlistbydoctoremailanddate/` + loggedUser\n    );\n  }\n\n  public acceptRequestForDoctorApproval(email: string): Observable<any> {\n    console.log('accepted');\n    return this._http.get<any>(`${NAV_URL}/acceptstatus/` + email);\n  }\n\n  public rejectRequestForDoctorApproval(email: string): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/rejectstatus/` + email);\n  }\n\n  public acceptRequestForPatientApproval(slot: string): Observable<any> {\n    console.log('accepted');\n    return this._http.get<any>(`${NAV_URL}/acceptpatient/` + slot);\n  }\n\n  public rejectRequestForPatientApproval(slot: string): Observable<any> {\n    return this._http.get<any>(`${NAV_URL}/rejectpatient/` + slot);\n  }\n\n  public addBookingSlots(slot: Slots): Observable<any> {\n    return this._http.post<any>(`${NAV_URL}/addBookingSlots`, slot);\n  }\n\n  public addPrescriptions(prescription: Prescription): Observable<any> {\n    return this._http.post<any>(`${NAV_URL}/addPrescription`, prescription);\n  }\n\n  public getProfileDetails(loggedUser: string): Observable<any> {\n    return this._http.get(`${NAV_URL}/doctorProfileDetails/` + loggedUser);\n  }\n\n  public UpdateDoctorProfile(user: any): Observable<any> {\n    return this._http.put<any>(`${NAV_URL}/updatedoctor`, user);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}