{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/login.service\";\nexport class AdminGuard {\n  constructor(_router, _service) {\n    this._router = _router;\n    this._service = _service;\n  }\n  canActivate(route, state) {\n    if (this._service.isUserLoggedIn() && this._service.userType() === 'admin' || this._service.userType() === 'ADMIN') {\n      return true;\n    }\n    this._router.navigate(['login']);\n    return false;\n  }\n}\nAdminGuard.ɵfac = function AdminGuard_Factory(t) {\n  return new (t || AdminGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoginService));\n};\nAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminGuard,\n  factory: AdminGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,OAAgB,EAAUC,QAAuB;IAAjD,YAAO,GAAPD,OAAO;IAAmB,aAAQ,GAARC,QAAQ;EAAkB;EAExEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IAEnE,IAAI,IAAI,CAACH,QAAQ,CAACI,cAAc,EAAE,IAAI,IAAI,CAACJ,QAAQ,CAACK,QAAQ,EAAE,KAAK,OAAO,IAAI,IAAI,CAACL,QAAQ,CAACK,QAAQ,EAAE,KAAK,OAAO,EAClH;MACE,OAAO,IAAI;;IAEb,IAAI,CAACN,OAAO,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;;;mBAZWT,UAAU;AAAA;;SAAVA,UAAU;EAAAU,SAAVV,UAAU;EAAAW,YAFT;AAAM","names":["AdminGuard","constructor","_router","_service","canActivate","route","state","isUserLoggedIn","userType","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cheri\\Downloads\\HealthCareManagement-main\\HealthCareManagement-main\\src\\app\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private _router : Router, private _service : LoginService) {}\n  \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) \n  {\n    if (this._service.isUserLoggedIn() && this._service.userType() === 'admin' || this._service.userType() === 'ADMIN') \n    {\n      return true;\n    }\n    this._router.navigate(['login']);\n    return false;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}