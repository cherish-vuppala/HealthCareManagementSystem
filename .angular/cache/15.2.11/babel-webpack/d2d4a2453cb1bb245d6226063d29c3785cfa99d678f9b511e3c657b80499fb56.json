{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/doctor.service\";\nfunction CheckslotsComponent_tr_24_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.amslot);\n  }\n}\nfunction CheckslotsComponent_tr_24_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.noonslot);\n  }\n}\nfunction CheckslotsComponent_tr_24_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CheckslotsComponent_tr_24_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.pmslot);\n  }\n}\nfunction CheckslotsComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtemplate(9, CheckslotsComponent_tr_24_div_9_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(10, CheckslotsComponent_tr_24_div_10_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(11, CheckslotsComponent_tr_24_div_11_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, CheckslotsComponent_tr_24_div_13_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(14, CheckslotsComponent_tr_24_div_14_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(15, CheckslotsComponent_tr_24_div_15_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtemplate(17, CheckslotsComponent_tr_24_div_17_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(18, CheckslotsComponent_tr_24_div_18_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(19, CheckslotsComponent_tr_24_div_19_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(doctor_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.doctorname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.specialization);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amslot !== \"empty\" && doctor_r1.amstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonslot !== \"empty\" && doctor_r1.noonstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmslot !== \"empty\" && doctor_r1.pmstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.patienttype);\n  }\n}\nexport class CheckslotsComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.currRole = '';\n    this.loggedUser = '';\n  }\n  ngOnInit() {\n    this.loggedUser = JSON.stringify(sessionStorage.getItem('loggedUser') || '{}');\n    this.loggedUser = this.loggedUser.replace(/\"/g, '');\n    this.currRole = JSON.stringify(sessionStorage.getItem('ROLE') || '{}');\n    this.currRole = this.currRole.replace(/\"/g, '');\n    this.slots = this._service.getSlotList();\n  }\n}\nCheckslotsComponent.ɵfac = function CheckslotsComponent_Factory(t) {\n  return new (t || CheckslotsComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\nCheckslotsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckslotsComponent,\n  selectors: [[\"app-checkslots\"]],\n  decls: 35,\n  vars: 3,\n  consts: [[1, \"panel\", \"panel-primary\"], [1, \"panel-heading\"], [2, \"text-align\", \"center\", \"font-family\", \"'Oswald', sans-serif\", \"color\", \"darkgreen\", \"margin-top\", \"3%\", \"margin-bottom\", \"3%\"], [1, \"panel-body\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"datecover\"], [4, \"ngIf\"], [1, \"noslot\"], [1, \"accepted\"], [1, \"pending\"]],\n  template: function CheckslotsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\", 2);\n      i0.ɵɵtext(4, \" Available Booking Slots \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"table\", 4)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Specialization\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"FN slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Noon slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"PM slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Patient Type\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, CheckslotsComponent_tr_24_Template, 22, 13, \"tr\", 5);\n      i0.ɵɵpipe(25, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(26, \"br\")(27, \"br\")(28, \"br\")(29, \"br\")(30, \"br\")(31, \"br\")(32, \"br\")(33, \"br\")(34, \"app-footer\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 1, ctx.slots));\n    }\n  },\n  styles: [\"@import url(https://fonts.googleapis.com/css2?family=Mate+SC&display=swap);@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@600&display=swap);.panel-body[_ngcontent-%COMP%]{\\n  margin-left: 1%;\\n  margin-right: 2%;\\n}\\nthead[_ngcontent-%COMP%]{\\n  background-color: rgb(67, 97, 20);\\n}\\ntable[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{\\n  text-align: center;\\n  align-items: center;\\n  vertical-align: middle;\\n}\\ntable[_ngcontent-%COMP%], td[_ngcontent-%COMP%], tr[_ngcontent-%COMP%]{\\n  border: 1px solid rgb(163, 161, 161);\\n  font-family: serif;\\n  font-weight: bold;\\n  font-style: normal;\\n  font-size: large;\\n}\\n\\nth[_ngcontent-%COMP%]{\\n  text-transform: uppercase;\\n  color: white;\\n  font-family: Helvetica;\\n  font-style: italic;\\n  font-size: normal;\\n}\\ntd[_ngcontent-%COMP%]{\\n  text-transform:none;\\n}\\n.accepted[_ngcontent-%COMP%]{\\n  border: 1px solid black;\\n  border-radius: 10px;\\n  background-color: rgb(30, 116, 30);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.pending[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  background-color: rgb(196, 137, 28);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.datecover[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  background-color: rgb(10, 15, 68);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.noslot[_ngcontent-%COMP%]\\n{\\n  border-radius: 10px;\\n  background-color: rgb(128, 26, 26);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jaGVja3Nsb3RzL2NoZWNrc2xvdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlDQUFpQztBQUNuQztBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLG9DQUFvQztFQUNwQyxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0NBQWtDO0VBQ2xDLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsbUNBQW1DO0VBQ25DLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsaUNBQWlDO0VBQ2pDLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCO0FBQ0E7O0VBRUUsbUJBQW1CO0VBQ25CLGtDQUFrQztFQUNsQywwQkFBMEI7RUFDMUIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1hdGUrU0MmZGlzcGxheT1zd2FwJyk7XG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Pc3dhbGQ6d2dodEA2MDAmZGlzcGxheT1zd2FwJyk7XG5cbi5wYW5lbC1ib2R5e1xuICBtYXJnaW4tbGVmdDogMSU7XG4gIG1hcmdpbi1yaWdodDogMiU7XG59XG50aGVhZHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDY3LCA5NywgMjApO1xufVxudGFibGUsIHRke1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG50YWJsZSwgdGQsIHRye1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTYzLCAxNjEsIDE2MSk7XG4gIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1zaXplOiBsYXJnZTtcbn1cblxudGh7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IEhlbHZldGljYTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IG5vcm1hbDtcbn1cbnRke1xuICB0ZXh0LXRyYW5zZm9ybTpub25lO1xufVxuLmFjY2VwdGVke1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMwLCAxMTYsIDMwKTtcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbi5wZW5kaW5ne1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTk2LCAxMzcsIDI4KTtcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbi5kYXRlY292ZXJ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMCwgMTUsIDY4KTtcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbi5ub3Nsb3RcbntcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyOCwgMjYsIDI2KTtcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CheckslotsComponent","constructor","_service","ngOnInit","loggedUser","JSON","stringify","sessionStorage","getItem","replace","currRole","slots","getSlotList","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\cheri\\Downloads\\HealthCareManagement-main\\HealthCareManagement-main\\src\\app\\components\\checkslots\\checkslots.component.html","C:\\Users\\cheri\\Downloads\\HealthCareManagement-main\\HealthCareManagement-main\\src\\app\\components\\checkslots\\checkslots.component.ts"],"sourcesContent":["<app-header></app-header>\n\n<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2 style=\"text-align: center; font-family: 'Oswald', sans-serif;color: darkgreen; margin-top: 3%; margin-bottom: 3%;\"> Available Booking Slots </h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Name</th>\n            <th>Specialization</th>\n            <th>FN slot</th>\n            <th>Noon slot</th>\n            <th>PM slot</th>\n            <th>Patient Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let doctor of slots | async\">\n            <td>\n                <div class=\"datecover\">{{doctor.date}}</div>\n            </td>\n            <td>{{doctor.doctorname}}</td>\n            <td>{{doctor.specialization}}</td>\n            <td>\n                <div *ngIf=\"doctor.amslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.amstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.amslot !== 'empty' && doctor.amstatus === 'unbooked'\"><b class=\"pending\">{{doctor.amslot}}</b></div>\n            </td>\n            <td>\n                <div *ngIf=\"doctor.noonslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.noonstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.noonslot !== 'empty' && doctor.noonstatus === 'unbooked'\"><b class=\"pending\">{{doctor.noonslot}}</b></div>\n            </td>\n            <td>\n                <div *ngIf=\"doctor.pmslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.pmstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.pmslot !== 'empty' && doctor.pmstatus === 'unbooked'\"><b class=\"pending\">{{doctor.pmslot}}</b></div>\n            </td>\n            <td>{{doctor.patienttype}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n<br><br><br><br><br><br><br><br>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Slots } from 'src/app/models/slots';\nimport { DoctorService } from 'src/app/services/doctor.service';\n\n@Component({\n  selector: 'app-checkslots',\n  templateUrl: './checkslots.component.html',\n  styleUrls: ['./checkslots.component.css']\n})\nexport class CheckslotsComponent implements OnInit {\n\n  currRole = '';\n  loggedUser = '';\n  slots : Observable<Slots[]> | undefined;\n  \n  constructor(private _service : DoctorService) { }\n\n  ngOnInit(): void\n  {\n    this.loggedUser = JSON.stringify(sessionStorage.getItem('loggedUser')|| '{}');\n    this.loggedUser = this.loggedUser.replace(/\"/g, '');\n\n    this.currRole = JSON.stringify(sessionStorage.getItem('ROLE')|| '{}'); \n    this.currRole = this.currRole.replace(/\"/g, '');\n\n    this.slots = this._service.getSlotList();\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}